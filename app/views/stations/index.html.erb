

<!-- <%= form_for @new_station, url: {action: "create"} do |f| %>
  Station ID: <%= f.text_field :stid %>
  <%= f.submit "Add Station" %>
<% end %> -->

<div id="new-station">
  <a class="generic-button add-station">Add Station</a>
  <input class="typeahead strong-hide" type="text" placeholder="Add new station by name...">
</div>

<div class="mapbox-container">
  <div id='mapbox-map' style='width: 100%; height: 800px;'></div>
</div>


<div class="station-list">
  <div class="station-header">
    <h2 class="station-title">My Stations</h2>
  </div>

  <div class="station-list-content">
    <% if @stations.length > 0 %>
      <table class="table station-table click-to-scroll highlight bordered">
        <thead>
          <tr>
            <th scope="col"></th>
            <th class="text-center" scope="col">State</th>
            <th class="text-center" scope="col">Elevation</th>
            <th class="text-center" scope="col"></th>
            <th class="text-center" scope="col"></th>
          </tr>
        </thead>

        <tbody>
          <% @stations.each do |station| %>

            <tr data-stationId="<%= station[:id] %>">
              <th scope="row" class="station-name"><%= station.user_stations.find_by_user_id(current_user.id).nickname %></th>
              <td class="text-center"><%= station.state %></td>
              <td class="text-center"><%= number_with_delimiter(station.elevation, delimiter: ',') %> ft.</td>
              <td class="text-center"><i class="edit-station-title-button fa fa-pencil-square-o" aria-hidden="true"></i></td>
              <td class="text-center"><%= link_to '<i class="remove-station-button fa fa-trash-o" aria-hidden="true"></i>'.html_safe, station_path(station), method: :delete, data: { confirm: 'Are you sure you want to remove this station?' } %></td>
            </tr>

          <% end %>
        </tbody>
      </table>
    <% else %>
      You do not have any saved stations. Please add a station to see data.
    <% end %>
  </div>
</div>



<div id="station-data-area" class="station station-list-item hidden">

  <div class="station-header">
    <h2 class="station-title">Loading...</h2>
  </div>

  <div class="station-content">
      <div class="data-header">ADD TITLE</div>

      <table class="table station-table striped">
        <thead>
          <tr>
            <th scope="col"></th>
            <th class="text-center" scope="col">Past 24</th>
            <th class="text-center" scope="col">Past 48</th>
            <th class="text-center" scope="col">Past 72</th>
          </tr>
        </thead>
        <tbody>

        </tbody>
      </table>

    <section class="charts">

      <div class="row chart-block">
        <div class="col-md-4">
          <div class="data-header">Temperature</div>
        </div>

        <div id="temperature-chart" class="temperature-chart chart loading-icon" ></div>
      </div>


      <div class="row chart-block">
        <div class="col-md-4">
          <div class="data-header">Wind</div>
        </div>

        <div class="col-md-4 toggle-buttons">
          <button class="toggle-button active" data-seriesId="windGust">Gusts</button>
          <button class="toggle-button active" data-seriesId="windSpeed">Wind</button>
        </div>

        <div id="wind-chart" class="wind-chart chart loading-icon"></div>
      </div>

    </section>

  </div>
</div>



<script>


// TODO list
// add date selection, remove days back functionality/code
// Fix categories to show less, or to show days back
// refactor out AJAX
// Mark times when faceting could occur on temp graph
// Add ability to order stations w drag and drop
// Ensure data point only every 15 minutes
// Precipitation density graph
// Snow settlement graph

$(document).ready(function() {

  initializeMap();
  addHandlers();
  setReferences();

});

var stations;
var defaultDaysBack = 3;

var $stationArea;
var $stationTitle;
var $temperatureChart;
var $windChart;

var addHandlers = function() {
  addToggleSeriesHandler();
  addNewStationButtonHandler();
  addStationClickHandler();
  addSaveStationClickHandler();
  addQuickViewClickHandler();
  addEditStationClickHandler();
  addUpdateStationClickHandler();
};

var setReferences = function() {
  $stationArea      = $('#station-data-area');
  $stationTitle     = $stationArea.find('.station-title');
  $temperatureChart = $stationArea.find('.temperature-chart');
  $windChart        = $stationArea.find('.wind-chart');
};

var setStationTitle = function(title) {
  $stationTitle.html(title);
};

var setUserStationTitle = function(stationId) {
  var station       = snowSense.arrayHelper.findItemByValue(gon.stations, parseInt(stationId), 'id');
  var userStation   = snowSense.arrayHelper.findItemByValue(gon.userStations, station.id, 'station_id');

  setStationTitle(userStation.nickname);
};

var getTimeSeriesData = function(stationId, daysBack, onSuccess) {
  var url = '/stations/' + stationId + '/timeseries';
  $.ajax({
     url: url,
     data: {
        format: 'json',
        days_back: daysBack
     },
     dataType: 'json',
     type: 'GET'
  }).done(function(data) {
      onSuccess(data)
  }).fail(function(error) {
      console.log(error);
  });
};

var showStationArea = function() {
  $stationArea.removeClass('hidden');
  $stationArea[0].scrollIntoView({block: 'start', behavior: 'smooth'});
};

var onStationDataRetrieved = function(data) {
  snowSense.chartHelper.drawTempChart(data);
  snowSense.chartHelper.drawWindChart(data);
};

var addStationClickHandler = function() {

  var onClick = function(e) {
    var $target     = $(e.target);
    var $row        = $target.closest('tr');
    var stationId   = $row.attr('data-stationId');

    if ($target.hasClass('edit-station-title-button') || $target.hasClass('remove-station-button') || $target.hasClass('edit-station-title') || $target.hasClass('save-station-title')) return;

    showStationArea();
    setUserStationTitle(stationId);
    getTimeSeriesData(stationId, defaultDaysBack, onStationDataRetrieved);
  };

  $('.station-list .click-to-scroll tr').click(onClick);
};

var addNewStationButtonHandler = function() {

  var onClick = function(e) {
    var $target     = $(e.target);
    var $stationDiv = $target.closest('#new-station');
    var $twitterInput = $stationDiv.find('.tt-input');

    $target.hide();
    $twitterInput.removeClass('strong-hide');
    $twitterInput.focus();
  };

  $('.add-station').click(onClick);

};

var fetchChartData = function(station, daysBack, chart) {

  snowSense.chartHelper.removeAllSeries(chart);
  chart.showLoading();

  getTimeSeriesData(station.id, daysBack, onStationDataRetrieved);
};


var addToggleSeriesHandler = function() {

  var onClick = function(e) {
    var $target     = $(e.target);
    var $chartBlock = $target.closest('.chart-block');
    var $chart      = $chartBlock.find('.chart');
    var seriesId    = $target.attr('data-seriesId');
    var chart       = $chart.highcharts();
    var series      = chart.get(seriesId);

    if ($target.hasClass('active')) {
      $target.removeClass('active');
      series.hide();
    } else {
      $target.addClass('active');
      series.show();
    }
  };

  $('.toggle-button').click(onClick);
}



var lookupStations = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  remote: {
    url: '/stations/search?query=%QUERY',
    wildcard: '%QUERY'
  }
});


$('#new-station .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 3,
    displayKey: 'name',
  },
  {
    name: 'states',
    source: lookupStations,
    limit: 10,
    templates: {
    suggestion: function (station) {
        return '<p>' + station.name + '</p>';
      }
    }
  }
);

var addUserStation = function(stid) {
  $.ajax({
     url: '/stations',
     dataType: 'html',
     data: { station: { stid: stid } },
     type: 'POST'
  }).done(function(data) {
      location.reload();      // station added, reload page to get new data
  }).fail(function(error) {
      console.log(error);
  });
};

$('.typeahead').on('typeahead:selected', function(evt, item) {
  $('.typeahead').typeahead('val', '');
  addUserStation(item.stid);
});


var initializeMap = function() {

  var createMarkerPopup = function(marker) {
    var $div = $('<div>');
    var $popup = $('<div class="station-popup"></div>');
    $popup.attr('data-stationId', marker.properties.stid);
    $popup.attr('data-id', marker.properties.id);
    $popup.append($('<div class="title">' + marker.properties.name + '</div>'));
    $popup.append($('<div class="elevation">Elevation: ' + marker.properties.elevation + '</div>'));

    var $buttons = $('<div class="buttons"></div>');
    $buttons.append($('<a class="left">Save</a>'));
    $buttons.append($('<a class="right">Quick View</a>'));

    $popup.append($buttons);

    $div.append($popup);

    return $div.html();
  };

  $.ajax({
     url: '/stations/active_stations',
     dataType: 'json',
     type: 'GET'
  }).done(function(data) {
      console.log(data);

      data.forEach(function(marker) {
        var coordinates = marker.geometry.coordinates.map(function(coord) { return parseFloat(coord) });
        // create a DOM element for the marker
        var el = document.createElement('div');
        el.className = 'station-marker';
        el.style.backgroundImage = 'url(https://placekitten.com/g/200/)';
        el.style.width = '10px';
        el.style.height = '10px';

        // el.addEventListener('click', function() {
        //
        // });

        var popup = new mapboxgl.Popup()
          .setHTML(createMarkerPopup(marker));


        // add marker to map
        new mapboxgl.Marker(el)
          .setLngLat(coordinates)
          .setPopup(popup)
          .addTo(map);
      });

  }).fail(function(error) {
      console.log(error);
  });

  mapboxgl.accessToken = 'pk.eyJ1IjoiamhlbmxleSIsImEiOiJjamNqbDBuZHA0ZmFlMnFvNTV5ZWJtOTJqIn0.YsUjp-03ob3AzW1lkPvpmw';

  console.log("WARN: Hard-coded lat/long for map start");
  var map = new mapboxgl.Map({
    container: 'mapbox-map',
    style: 'mapbox://styles/mapbox/outdoors-v10',
    center: [-110.834441, 43.501072], // starting position [lng, lat]
    zoom: 9 // starting zoom
  });

  map.addControl(new mapboxgl.NavigationControl())

  map.on('zoom',function(meow) {
    // only fetch when zooming out, and zoom is greater than initial zoom
  });

  // TODO add handler for when map is moved as well (dragged)
};

var addSaveStationClickHandler = function() {

  var onSave = function(e) {
    var $target   = $(e.target);
    var $popup    = $target.closest('.station-popup');
    var stationId = $popup.attr('data-stationId');

    addUserStation(stationId);
  };

  $('body').on('click', 'a.left', onSave);
};

var addQuickViewClickHandler = function() {

  var onClick = function(e) {
    var $target     = $(e.target);
    var $popup      = $target.closest('.station-popup');
    var stationId   = $popup.attr('data-stationId');
    var id          = $popup.attr('data-id');
    var title       = $popup.find('.title')[0].innerText;

    var daysBack    = defaultDaysBack;
    var station     = {id: id, station: title, stid: stationId};
    var windChart   = snowSense.chartHelper.initializeEmptyWindChart($windChart);
    var tempChart   = snowSense.chartHelper.initializeEmptyTemperatureChart($temperatureChart);

    showStationArea();
    setStationTitle(title);
    fetchChartData(station, daysBack, tempChart);
    fetchChartData(station, daysBack, windChart);
  };

  $('body').on('click', 'a.right', onClick);
};

var addEditStationClickHandler = function() {

  var onClick = function(e) {
    var $target = $(e.target);
    var $row = $target.closest('tr');
    var $name = $row.find('.station-name');

    $name.html($('<input class="edit-station-title" value="' + $name[0].innerText + '">'));
    $name.find('input').focus();
    $name.append($('<a class="generic-button save-station-title">Save</a>'));
  };

  $('.edit-station-title-button').click(onClick);
};

var addUpdateStationClickHandler = function() {

  var onSave = function(e) {
    var $target     = $(e.target);
    var $row        = $target.closest('tr');
    var $name       = $row.find('.station-name');
    var stationId   = $row.attr('data-stationId');
    var nickname    = $row.find('.edit-station-title')[0].value;

    var onSuccess = function(data) {
      $name.empty();
      $name.html(data.nickname);
    };

    $.ajax({
       url: '/user_stations/' + stationId,
       data: {
          format:     'json',
          nickname:   nickname
       },
       dataType: 'json',
       type: 'PATCH'
    }).done(function(data) {
        onSuccess(data)
    }).fail(function(error) {
        console.log(error);
    });

  };

  $('body').on('click', '.save-station-title', onSave);
}


</script>
